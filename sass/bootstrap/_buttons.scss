// stylelint-disable selector-no-qualifying-type

//
// Base styles
//

.btn {
  display: inline-block;
  font-weight: $btn-font-weight;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  border: $btn-border-width solid transparent;
  @include button-size($btn-padding-y, $btn-padding-x, $font-size-base, $btn-line-height, $btn-border-radius);
  @include transition($btn-transition);

  // Share hover and focus styles
  @include hover-focus {
    text-decoration: none;
  }

  &:focus,
  &.focus {
    outline: 0;
    box-shadow: $btn-focus-box-shadow;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    opacity: $btn-disabled-opacity;
    @include box-shadow(none);
  }

  // Opinionated: add "hand" cursor to non-disabled .btn elements
  &:not(:disabled):not(.disabled) {
    cursor: pointer;
  }

  &.btn-width {
    min-width: $btn-min-width;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {

    @include box-shadow($btn-active-box-shadow);

    &:focus {
      @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
    }
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}


//
// Alternate buttons
//

@each $color, $value in $theme-colors {
  .btn-#{$color} {
    @include button-variant($value, $value);
  }
}

@each $color, $value in $theme-colors {
  .btn-outline-#{$color} {
    @include button-outline-variant($value);
  }
}

@each $color, $value in $theme-colors {
  .btn-js-#{$color} {
    &:not(.btn-active) {
      @include button-outline-variant($value);
      &:hover,
      &:not(:disabled):not(.disabled):active {
        color: $white;
      }
    }

    &.btn-active {
      @include button-variant($value, $value);
      
      &,
      &:hover,
      &:not(:disabled):not(.disabled):active,
      &:focus {
        color: $white;
      }
    }
  }
}


//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight: $font-weight-normal;
  color: $body-color;
  background-color: transparent;

  @include hover {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
    border-color: transparent;
  }

  &:focus,
  &.focus {
    text-decoration: $link-hover-decoration;
    border-color: transparent;
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
    pointer-events: none;
  }

  // No need for an active state here
}


//
// Button Sizes
//

.btn-lg {
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $font-size-lg, $btn-line-height-lg, $btn-border-radius-lg);
}

.btn-sm {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $font-size-xs, $btn-line-height-sm, $btn-border-radius-sm);
  min-width: $btn-min-width-sm;
  font-weight: $font-weight-bold;
}


//
// Block button
//

.btn-block {
  display: block;
  width: 100%;

  // Vertically space out multiple block buttons
  + .btn-block {
    margin-top: $btn-block-spacing-y;
  }
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}

.btn-outline-warning,
.btn-greenblue,
.btn-montecarlo,
.btn-outline-montecarlo {
  &:hover,
  &.active {
    color: $white;
  }
}

.btn-montecarlo {
  color: $white;
}


.btn-icon {
  display: inline-flex;
  align-items: center;
  text-align: left;
  padding-left: 3.467em;
  position: relative;

  img, svg {
    margin-right: 1.063em;
    position: absolute;
    left: 16px;
  }

  &.btn-icon--oil svg {
    top: 16px;
    left: 14px;
  }

  &.btn-icon--water img {
    top: 10px;
    left: 18px;
  }

  &.btn-icon--carbon svg {
    top: 9px;
  }

  &.btn-outline-primary {
    color: rgba($primary, 1);
    border-color: rgba($primary, .5);

    polygon,
    polyline {
      fill: $primary;
      opacity: 1;
    }
  }

  &.btn-outline-secondary {
    color: rgba($blue, 1);
    border-color: rgba($blue, .5);

    polygon,
    polyline,
    path {
      fill: $blue;
      opacity: 1;
    }
  }

  &.btn-outline-greenblue {
    color: rgba($greenblue, 1);
    border-color: rgba($greenblue, .5);

    polygon,
    polyline {
      fill: $greenblue;
      opacity: 1;
    } 
  }

  &.btn-outline-danger {
    color: rgba($danger, 1);
    border-color: rgba($danger, .5);

    polygon,
    polyline {
      fill: $danger;
      opacity: 1;
    }
  }

  &.btn-outline-primary,
  &.btn-outline-secondary,
  &.btn-outline-danger,
  &.btn-outline-warning,
  &.btn-outline-greenblue {
    &:hover,
    &:not(:disabled):not(.disabled).active,
    &.active {
      color: $white;

      polygon,
      polyline,
      path {
        fill: $white;
        opacity: 1;
      }
    }
  }
}

.btn-link-primary {
  color: $primary;
  font-weight: $font-weight-bold;

  svg {
    margin-right: 1rem;
  }

  &:hover {
    color: $white;

    polygon,
    polyline {
      fill: $white;
      opacity: 1;
    }
  }
}

